webpackJsonp([0xa4d2c945eacc],{332:function(t,e){t.exports={data:{markdownRemark:{html:'<p>We will now add an additional feature to the favourites list that will\ndemonstrate some of the shortcoming of our current data structure.</p>\n<p>We will be using the <code>removeFavourite</code> Redux action and binding it to a button\non each row of the favourites list which will cause the application to update\nand the favourite state to be removed.</p>\n<p>Let\'s first of all add the new styles for the remove button to our\n<code>FavouritesList</code> component styles. Add the <code>.remove</code> class to the end of the\ncomponent CSS.</p>\n<div class="gatsby-highlight">\n      <pre class="language-css"><code><span class="token comment">/* app/js/components/FavouritesList/FavouritesList.css */</span>\n\n<span class="token comment">/* ... previous styles ... */</span>\n\n<span class="token selector">.remove</span> <span class="token punctuation">{</span>\n  <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>\n  <span class="token property">background</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>\n  <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>\n  <span class="token property">font-size</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>\n  <span class="token property">margin</span><span class="token punctuation">:</span> 0 12px 0 0<span class="token punctuation">;</span>\n  <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n  <span class="token property">line-height</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>\n  <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>Next we will import the <code>removeFavourite</code> action and pass it to the\n<code>FavouritesList</code> props via the <code>mapDispatchToProps</code> method as we did in the\nprevious step with the <code>Pointer</code> component.</p>\n<p>This means we will also update our <code>propTypes</code> definition with the new <code>remove</code>\nprop.</p>\n<div class="gatsby-highlight">\n      <pre class="language-diff"><code>  import React from \'react\';\n  import PropTypes from \'prop-types\';\n  import { connect } from \'react-redux\';\n\n<span class="token inserted">+ import { removeFavourite } from \'../../actions\';</span>\n  import styles from \'./FavouritesList.css\';\n\n<span class="token deleted">-  export const FavouritesList = ({ points }) => {</span>\n<span class="token inserted">+  export const FavouritesList = ({ points, remove }) => {</span>\n    const favourites = points.filter(point => point.favourite);\n\n    return (\n      &lt;div className={styles.listWrapper}>\n        &lt;h3>Favourites&lt;/h3>\n        &lt;ul className={styles.list}>\n          {favourites.map((favourite, index) => (\n            &lt;li key={index}>{favourite.details.name}&lt;/li>\n          ))}\n        &lt;/ul>\n      &lt;/div>\n    );\n  };\n\n  FavouritesList.propTypes = {\n<span class="token deleted">-    points: PropTypes.arrayOf(PropTypes.object)</span>\n<span class="token inserted">+    points: PropTypes.arrayOf(PropTypes.object),</span>\n<span class="token inserted">+    remove: PropTypes.func.isRequired</span>\n  };\n\n  const mapStateToProps = state => {\n    return {\n      points: state.points\n    };\n  };\n\n<span class="token inserted">+ const mapDispatchToProps = dispatch => {</span>\n<span class="token inserted">+   return {</span>\n<span class="token inserted">+     remove: index => {</span>\n<span class="token inserted">+       dispatch(removeFavourite(index));</span>\n<span class="token inserted">+     }</span>\n<span class="token inserted">+   };</span>\n<span class="token inserted">+ };</span>\n\n<span class="token deleted">-  const ConnectedFavouritesList = connect(mapStateToProps)(FavouritesList);</span>\n<span class="token inserted">+  const ConnectedFavouritesList = connect(mapStateToProps, mapDispatchToProps)(</span>\n<span class="token inserted">+    FavouritesList</span>\n<span class="token inserted">+  );</span>\n\n  export default ConnectedFavouritesList;\n</code></pre>\n      </div>\n<p>Next we will call the <code>remove</code> function which will trigger the <code>removeFavourite</code>\naction by adding a button tag that has an <code>onClick</code> handler.</p>\n<div class="gatsby-highlight">\n      <pre class="language-diff"><code>  export const FavouritesList = ({ points, remove }) => {\n    const favourites = points.filter(point => point.favourite);\n\n    return (\n      &lt;div className={styles.listWrapper}>\n        &lt;h3>Favourites&lt;/h3>\n        &lt;ul className={styles.list}>\n          {favourites.map((favourite, index) => (\n<span class="token deleted">-           &lt;li key={index}>{favourite.details.name}&lt;/li></span>\n<span class="token inserted">+           &lt;li key={index}></span>\n<span class="token inserted">+             &lt;button onClick={() => remove(index)} className={styles.remove}></span>\n<span class="token inserted">+               &amp;times;</span>\n<span class="token inserted">+             &lt;/button></span>\n<span class="token inserted">+</span>\n<span class="token inserted">+             &lt;span>{favourite.details.name}&lt;/span></span>\n<span class="token inserted">+           &lt;/li></span>\n          ))}\n        &lt;/ul>\n      &lt;/div>\n    );\n  };\n</code></pre>\n      </div>\n<p>Now if you look in the browser the favourites list has a remove button beside\neach row in the list. If you click on the remove button in the first row beside\n"The Wall" you will see that the row disappears and the map icon updates also.</p>\n<p>Try pressing the remove button beside "Winterfell" though. Nothing happens. If\nyou add some more places as favourites then and start removing them in a random\norder you will notice that the list will not update correctly.</p>\n<p>This is because we pass an array index as the key to update the points array.\nThe index from the favourites list is the row number of the list which does not\nalways match the index of the points on the map so the reducer can\'t find the\ncorrect point.</p>\n<p>This demonstrates that using an array index is not the best approach for\nmanaging our data. It is preferable for each data item you are working with has\na unique ID that you can use to identify it with from any point of your\napplication.</p>\n<p>In the next step we will update our data to use unique IDs instead of relying on\nthe array index which will fix this bug.</p>',frontmatter:{title:"Removing Favourites from the List",step:15}},allMarkdownRemark:{edges:[{node:{fields:{slug:"/tutorial/links/"},frontmatter:{title:"Links",step:null}}},{node:{fields:{slug:"/tutorial/getting-started/"},frontmatter:{title:"Getting Started",step:null}}},{node:{fields:{slug:"/tutorial/steps/1-setup-package/"},frontmatter:{title:"Generate the package.json",step:1}}},{node:{fields:{slug:"/tutorial/bonus/react-router/"},frontmatter:{title:"Navigation with React Router",step:null}}},{node:{fields:{slug:"/tutorial/steps/12-favourites-list/"},frontmatter:{title:"Favourites List",step:12}}},{node:{fields:{slug:"/tutorial/steps/13-adding-redux/"},frontmatter:{title:"Starting with Redux",step:13}}},{node:{fields:{slug:"/tutorial/steps/10-pointer-details/"},frontmatter:{title:"Showing the Details of each Point",step:10}}},{node:{fields:{slug:"/tutorial/steps/14-managing-favourites-with-redux/"},frontmatter:{title:"Managing Favourites with Redux",step:14}}},{node:{fields:{slug:"/tutorial/steps/18-testing-redux-actions/"},frontmatter:{title:"Testing Redux Actions",step:18}}},{node:{fields:{slug:"/tutorial/steps/16-ids-for-points/"},frontmatter:{title:"Adding IDs to the Points Data",step:16}}},{node:{fields:{slug:"/tutorial/steps/15-removing-favourites-from-the-list/"},frontmatter:{title:"Removing Favourites from the List",step:15}}},{node:{fields:{slug:"/tutorial/steps/11-favourite-places/"},frontmatter:{title:"Favourite Places",step:11}}},{node:{fields:{slug:"/tutorial/steps/17-testing-with-jest/"},frontmatter:{title:"Testing with Jest",step:17}}},{node:{fields:{slug:"/tutorial/steps/19-testing-redux-reducers/"},frontmatter:{title:"Testing Redux Reducers",step:19}}},{node:{fields:{slug:"/tutorial/steps/2-webpack/"},frontmatter:{title:"Setting up Webpack",step:2}}},{node:{fields:{slug:"/tutorial/steps/20-jest-component-configuration/"},frontmatter:{title:"Preparing Component testing with Jest",step:20}}},{node:{fields:{slug:"/tutorial/steps/23-test-the-app-component/"},frontmatter:{title:"Testing the App Component",step:23}}},{node:{fields:{slug:"/tutorial/steps/22-testing-connected-components/"},frontmatter:{title:"Testing Connected Components",step:22}}},{node:{fields:{slug:"/tutorial/steps/21-testing-the-map/"},frontmatter:{title:"Testing the Map",step:21}}},{node:{fields:{slug:"/tutorial/steps/25-test-the-pointer/"},frontmatter:{title:"Testing the Pointer",step:25}}},{node:{fields:{slug:"/tutorial/steps/3-babel/"},frontmatter:{title:"Setting up Babel",step:3}}},{node:{fields:{slug:"/tutorial/steps/4-eslint-and-prettier/"},frontmatter:{title:"ESLint and Prettier",step:4}}},{node:{fields:{slug:"/tutorial/steps/24-test-favourites-list/"},frontmatter:{title:"Testing the Favourites List",step:24}}},{node:{fields:{slug:"/tutorial/steps/6-adding-the-map/"},frontmatter:{title:"Adding the Map",step:6}}},{node:{fields:{slug:"/tutorial/steps/5-starting-react/"},frontmatter:{title:"Starting with React",step:5}}},{node:{fields:{slug:"/tutorial/steps/8-webpack-dev-server/"},frontmatter:{title:"Webpack Dev Server",step:8}}},{node:{fields:{slug:"/tutorial/steps/7-styling-with-postcss/"},frontmatter:{title:"CSS Modules and PostCSS",step:7}}},{node:{fields:{slug:"/tutorial/steps/9-adding-points-to-the-map/"},frontmatter:{title:"Adding Points to the Map",step:9}}}]}},pathContext:{slug:"/tutorial/steps/15-removing-favourites-from-the-list/"}}}});
//# sourceMappingURL=path---tutorial-steps-15-removing-favourites-from-the-list-f5eefd19b72b66313182.js.map