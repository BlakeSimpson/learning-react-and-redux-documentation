{"version":3,"sources":["webpack:///path---tutorial-steps-15-removing-favourites-from-the-list-32a1bc01d3c596256dca.js","webpack:///./.cache/json/tutorial-steps-15-removing-favourites-from-the-list.json"],"names":["webpackJsonp","329","module","exports","data","markdownRemark","html","frontmatter","title","step","allMarkdownRemark","edges","node","fields","slug","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,ymJAAwhHC,aAAumCC,MAAA,oCAAAC,KAAA,KAAuDC,mBAAsBC,QAAUC,MAAQC,QAAUC,KAAA,8BAAoCP,aAAgBC,MAAA,kBAAAC,KAAA,SAA0CG,MAAQC,QAAUC,KAAA,oBAA0BP,aAAgBC,MAAA,QAAAC,KAAA,SAAgCG,MAAQC,QAAUC,KAAA,oCAA0CP,aAAgBC,MAAA,4BAAAC,KAAA,MAAiDG,MAAQC,QAAUC,KAAA,wCAA8CP,aAAgBC,MAAA,mBAAAC,KAAA,OAAyCG,MAAQC,QAAUC,KAAA,uCAA6CP,aAAgBC,MAAA,oCAAAC,KAAA,OAA0DG,MAAQC,QAAUC,KAAA,uCAA6CP,aAAgBC,MAAA,kBAAAC,KAAA,OAAwCG,MAAQC,QAAUC,KAAA,oCAA0CP,aAAgBC,MAAA,sBAAAC,KAAA,OAA4CG,MAAQC,QAAUC,KAAA,yDAA+DP,aAAgBC,MAAA,oCAAAC,KAAA,OAA0DG,MAAQC,QAAUC,KAAA,sDAA4DP,aAAgBC,MAAA,iCAAAC,KAAA,OAAuDG,MAAQC,QAAUC,KAAA,yCAA+CP,aAAgBC,MAAA,oBAAAC,KAAA,OAA0CG,MAAQC,QAAUC,KAAA,sCAA4CP,aAAgBC,MAAA,gCAAAC,KAAA,OAAsDG,MAAQC,QAAUC,KAAA,6CAAmDP,aAAgBC,MAAA,wBAAAC,KAAA,OAA8CG,MAAQC,QAAUC,KAAA,oDAA0DP,aAAgBC,MAAA,wCAAAC,KAAA,OAA8DG,MAAQC,QAAUC,KAAA,8CAAoDP,aAAgBC,MAAA,yBAAAC,KAAA,OAA+CG,MAAQC,QAAUC,KAAA,8BAAoCP,aAAgBC,MAAA,qBAAAC,KAAA,MAA0CG,MAAQC,QAAUC,KAAA,uCAA6CP,aAAgBC,MAAA,kBAAAC,KAAA,OAAwCG,MAAQC,QAAUC,KAAA,8CAAoDP,aAAgBC,MAAA,4BAAAC,KAAA,OAAkDG,MAAQC,QAAUC,KAAA,4CAAkDP,aAAgBC,MAAA,8BAAAC,KAAA,OAAoDG,MAAQC,QAAUC,KAAA,oDAA0DP,aAAgBC,MAAA,+BAAAC,KAAA,OAAqDG,MAAQC,QAAUC,KAAA,4BAAkCP,aAAgBC,MAAA,mBAAAC,KAAA,MAAwCG,MAAQC,QAAUC,KAAA,wCAA8CP,aAAgBC,MAAA,sBAAAC,KAAA,OAA4CG,MAAQC,QAAUC,KAAA,0CAAgDP,aAAgBC,MAAA,sBAAAC,KAAA,MAA2CG,MAAQC,QAAUC,KAAA,qCAA2CP,aAAgBC,MAAA,sBAAAC,KAAA,MAA2CG,MAAQC,QAAUC,KAAA,+CAAqDP,aAAgBC,MAAA,2BAAAC,KAAA,MAAgDG,MAAQC,QAAUC,KAAA,qCAA2CP,aAAgBC,MAAA,iBAAAC,KAAA,MAAsCG,MAAQC,QAAUC,KAAA,yCAA+CP,aAAgBC,MAAA,qBAAAC,KAAA,MAA0CG,MAAQC,QAAUC,KAAA,2CAAiDP,aAAgBC,MAAA,0BAAAC,KAAA,QAAgDM,aAAgBD,KAAA","file":"path---tutorial-steps-15-removing-favourites-from-the-list-32a1bc01d3c596256dca.js","sourcesContent":["webpackJsonp([181225226889932],{\n\n/***/ 329:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>We will now add an additional feature to the favourites list that will\\ndemonstrate some of the shortcoming of our current data structure.</p>\\n<p>We will be using the <code>removeFavourite</code> Redux action and binding it to a button\\non each row of the favourites list which will cause the application to update\\nand the favourite state to be removed.</p>\\n<p>Let's first of all add the new styles for the remove button to our\\n<code>FavouritesList</code> component styles. Add the <code>.remove</code> class to the end of the\\ncomponent CSS.</p>\\n<pre><code class=\\\"language-css\\\">/* app/js/components/FavouritesList/FavouritesList.css */\\n\\n.remove {\\n  float: left;\\n  background: transparent;\\n  border: none;\\n  color: #fff;\\n  font-size: 20px;\\n  margin: 0 12px 0 0;\\n  padding: 0;\\n  line-height: 12px;\\n  cursor: pointer;\\n}\\n</code></pre>\\n<p>Next we will import the <code>removeFavourite</code> action and pass it to the\\n<code>FavouritesList</code> props via the <code>mapDispatchToProps</code> method as we did in the\\nprevious step with the <code>Pointer</code> component.</p>\\n<p>This means we will also update our <code>propTypes</code> definition with the new <code>remove</code>\\nprop.</p>\\n<pre><code class=\\\"language-diff\\\">  import React from 'react';\\n  import PropTypes from 'prop-types';\\n  import { connect } from 'react-redux';\\n\\n+ import { removeFavourite } from '../../actions';\\n  import styles from './FavouritesList.css';\\n\\n-  export const FavouritesList = ({ points }) => {\\n+  export const FavouritesList = ({ points, remove }) => {\\n    const favourites = points.filter(point => point.favourite);\\n\\n    return (\\n      &#x3C;div className={styles.listWrapper}>\\n        &#x3C;h3>Favourites&#x3C;/h3>\\n        &#x3C;ul className={styles.list}>\\n          {favourites.map((favourite, index) => (\\n            &#x3C;li key={index}>{favourite.details.name}&#x3C;/li>\\n          ))}\\n        &#x3C;/ul>\\n      &#x3C;/div>\\n    );\\n  };\\n\\n  FavouritesList.propTypes = {\\n-    points: PropTypes.arrayOf(PropTypes.object)\\n+    points: PropTypes.arrayOf(PropTypes.object),\\n+    remove: PropTypes.func.isRequired\\n  };\\n\\n  const mapStateToProps = state => {\\n    return {\\n      points: state.points\\n    };\\n  };\\n\\n+ const mapDispatchToProps = dispatch => {\\n+   return {\\n+     remove: index => {\\n+       dispatch(removeFavourite(index));\\n+     }\\n+   };\\n+ };\\n\\n-  const ConnectedFavouritesList = connect(mapStateToProps)(FavouritesList);\\n+  const ConnectedFavouritesList = connect(mapStateToProps, mapDispatchToProps)(\\n+    FavouritesList\\n+  );\\n\\n  export default ConnectedFavouritesList;\\n</code></pre>\\n<p>Next we will call the <code>remove</code> function which will trigger the <code>removeFavourite</code>\\naction by adding a button tag that has an <code>onClick</code> handler.</p>\\n<pre><code class=\\\"language-diff\\\">  export const FavouritesList = ({ points, remove }) => {\\n    const favourites = points.filter(point => point.favourite);\\n\\n    return (\\n      &#x3C;div className={styles.listWrapper}>\\n        &#x3C;h3>Favourites&#x3C;/h3>\\n        &#x3C;ul className={styles.list}>\\n          {favourites.map((favourite, index) => (\\n-           &#x3C;li key={index}>{favourite.details.name}&#x3C;/li>\\n+           &#x3C;li key={index}>\\n+             &#x3C;button onClick={() => remove(index)} className={styles.remove}>\\n+               &#x26;times;\\n+             &#x3C;/button>\\n+\\n+             &#x3C;span>{favourite.details.name}&#x3C;/span>\\n+           &#x3C;/li>\\n          ))}\\n        &#x3C;/ul>\\n      &#x3C;/div>\\n    );\\n  };\\n</code></pre>\\n<p>Now if you look in the browser the favourites list has a remove button beside\\neach row in the list. If you click on the remove button in the first row beside\\n\\\"The Wall\\\" you will see that the row disappears and the map icon updates also.</p>\\n<p>Try pressing the remove button beside \\\"Winterfell\\\" though. Nothing happens. Also\\nif you add some more places and start removing them in a random order, the list\\nwill not update correctly.</p>\\n<p>This is because we pass an array index as the key to update the points array.\\nThe index from the favourites list is the row number of the list which does not\\nalways match the index of the points on the map so the reducer can't find the\\ncorrect point.</p>\\n<p>This demonstrates that using an array index is not the best approach for\\nmanaging our data. It is preferable for each data item you are working with to\\nhave a unique ID that you can use to identify it with from any point of your\\napplication.</p>\\n<p>In the next step we will update our data to use unique IDs instead of relying on\\nthe array index which will fix this bug.</p>\",\"frontmatter\":{\"title\":\"Removing Favourites from the List\",\"step\":15}},\"allMarkdownRemark\":{\"edges\":[{\"node\":{\"fields\":{\"slug\":\"/tutorial/getting-started/\"},\"frontmatter\":{\"title\":\"Getting Started\",\"step\":null}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/links/\"},\"frontmatter\":{\"title\":\"Links\",\"step\":null}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/1-setup-package/\"},\"frontmatter\":{\"title\":\"Generate the package.json\",\"step\":1}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/11-favourite-places/\"},\"frontmatter\":{\"title\":\"Favourite Places\",\"step\":11}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/10-pointer-details/\"},\"frontmatter\":{\"title\":\"Showing the Details of each Point\",\"step\":10}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/12-favourites-list/\"},\"frontmatter\":{\"title\":\"Favourites List\",\"step\":12}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/13-adding-redux/\"},\"frontmatter\":{\"title\":\"Starting with Redux\",\"step\":13}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/15-removing-favourites-from-the-list/\"},\"frontmatter\":{\"title\":\"Removing Favourites from the List\",\"step\":15}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/14-managing-favourites-with-redux/\"},\"frontmatter\":{\"title\":\"Managing Favourites with Redux\",\"step\":14}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/17-testing-with-jest/\"},\"frontmatter\":{\"title\":\"Testing with Jest\",\"step\":17}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/16-ids-for-points/\"},\"frontmatter\":{\"title\":\"Adding IDs to the Points Data\",\"step\":16}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/18-testing-redux-actions/\"},\"frontmatter\":{\"title\":\"Testing Redux Actions\",\"step\":18}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/20-jest-component-configuration/\"},\"frontmatter\":{\"title\":\"Preparing Component testing with Jest\",\"step\":20}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/19-testing-redux-reducers/\"},\"frontmatter\":{\"title\":\"Testing Redux Reducers\",\"step\":19}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/2-webpack/\"},\"frontmatter\":{\"title\":\"Setting up Webpack\",\"step\":2}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/21-testing-the-map/\"},\"frontmatter\":{\"title\":\"Testing the Map\",\"step\":21}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/23-test-the-app-component/\"},\"frontmatter\":{\"title\":\"Testing the App Component\",\"step\":23}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/24-test-favourites-list/\"},\"frontmatter\":{\"title\":\"Testing the Favourites List\",\"step\":24}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/22-testing-connected-components/\"},\"frontmatter\":{\"title\":\"Testing Connected Components\",\"step\":22}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/3-babel/\"},\"frontmatter\":{\"title\":\"Setting up Babel\",\"step\":3}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/25-test-the-pointer/\"},\"frontmatter\":{\"title\":\"Testing the Pointer\",\"step\":25}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/4-eslint-and-prettier/\"},\"frontmatter\":{\"title\":\"ESLint and Prettier\",\"step\":4}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/5-starting-react/\"},\"frontmatter\":{\"title\":\"Starting with React\",\"step\":5}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/9-adding-points-to-the-map/\"},\"frontmatter\":{\"title\":\"Adding Points to the Map\",\"step\":9}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/6-adding-the-map/\"},\"frontmatter\":{\"title\":\"Adding the Map\",\"step\":6}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/8-webpack-dev-server/\"},\"frontmatter\":{\"title\":\"Webpack Dev Server\",\"step\":8}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/7-styling-with-postcss/\"},\"frontmatter\":{\"title\":\"CSS Modules and PostCSS\",\"step\":7}}}]}},\"pathContext\":{\"slug\":\"/tutorial/steps/15-removing-favourites-from-the-list/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---tutorial-steps-15-removing-favourites-from-the-list-32a1bc01d3c596256dca.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>We will now add an additional feature to the favourites list that will\\ndemonstrate some of the shortcoming of our current data structure.</p>\\n<p>We will be using the <code>removeFavourite</code> Redux action and binding it to a button\\non each row of the favourites list which will cause the application to update\\nand the favourite state to be removed.</p>\\n<p>Let's first of all add the new styles for the remove button to our\\n<code>FavouritesList</code> component styles. Add the <code>.remove</code> class to the end of the\\ncomponent CSS.</p>\\n<pre><code class=\\\"language-css\\\">/* app/js/components/FavouritesList/FavouritesList.css */\\n\\n.remove {\\n  float: left;\\n  background: transparent;\\n  border: none;\\n  color: #fff;\\n  font-size: 20px;\\n  margin: 0 12px 0 0;\\n  padding: 0;\\n  line-height: 12px;\\n  cursor: pointer;\\n}\\n</code></pre>\\n<p>Next we will import the <code>removeFavourite</code> action and pass it to the\\n<code>FavouritesList</code> props via the <code>mapDispatchToProps</code> method as we did in the\\nprevious step with the <code>Pointer</code> component.</p>\\n<p>This means we will also update our <code>propTypes</code> definition with the new <code>remove</code>\\nprop.</p>\\n<pre><code class=\\\"language-diff\\\">  import React from 'react';\\n  import PropTypes from 'prop-types';\\n  import { connect } from 'react-redux';\\n\\n+ import { removeFavourite } from '../../actions';\\n  import styles from './FavouritesList.css';\\n\\n-  export const FavouritesList = ({ points }) => {\\n+  export const FavouritesList = ({ points, remove }) => {\\n    const favourites = points.filter(point => point.favourite);\\n\\n    return (\\n      &#x3C;div className={styles.listWrapper}>\\n        &#x3C;h3>Favourites&#x3C;/h3>\\n        &#x3C;ul className={styles.list}>\\n          {favourites.map((favourite, index) => (\\n            &#x3C;li key={index}>{favourite.details.name}&#x3C;/li>\\n          ))}\\n        &#x3C;/ul>\\n      &#x3C;/div>\\n    );\\n  };\\n\\n  FavouritesList.propTypes = {\\n-    points: PropTypes.arrayOf(PropTypes.object)\\n+    points: PropTypes.arrayOf(PropTypes.object),\\n+    remove: PropTypes.func.isRequired\\n  };\\n\\n  const mapStateToProps = state => {\\n    return {\\n      points: state.points\\n    };\\n  };\\n\\n+ const mapDispatchToProps = dispatch => {\\n+   return {\\n+     remove: index => {\\n+       dispatch(removeFavourite(index));\\n+     }\\n+   };\\n+ };\\n\\n-  const ConnectedFavouritesList = connect(mapStateToProps)(FavouritesList);\\n+  const ConnectedFavouritesList = connect(mapStateToProps, mapDispatchToProps)(\\n+    FavouritesList\\n+  );\\n\\n  export default ConnectedFavouritesList;\\n</code></pre>\\n<p>Next we will call the <code>remove</code> function which will trigger the <code>removeFavourite</code>\\naction by adding a button tag that has an <code>onClick</code> handler.</p>\\n<pre><code class=\\\"language-diff\\\">  export const FavouritesList = ({ points, remove }) => {\\n    const favourites = points.filter(point => point.favourite);\\n\\n    return (\\n      &#x3C;div className={styles.listWrapper}>\\n        &#x3C;h3>Favourites&#x3C;/h3>\\n        &#x3C;ul className={styles.list}>\\n          {favourites.map((favourite, index) => (\\n-           &#x3C;li key={index}>{favourite.details.name}&#x3C;/li>\\n+           &#x3C;li key={index}>\\n+             &#x3C;button onClick={() => remove(index)} className={styles.remove}>\\n+               &#x26;times;\\n+             &#x3C;/button>\\n+\\n+             &#x3C;span>{favourite.details.name}&#x3C;/span>\\n+           &#x3C;/li>\\n          ))}\\n        &#x3C;/ul>\\n      &#x3C;/div>\\n    );\\n  };\\n</code></pre>\\n<p>Now if you look in the browser the favourites list has a remove button beside\\neach row in the list. If you click on the remove button in the first row beside\\n\\\"The Wall\\\" you will see that the row disappears and the map icon updates also.</p>\\n<p>Try pressing the remove button beside \\\"Winterfell\\\" though. Nothing happens. Also\\nif you add some more places and start removing them in a random order, the list\\nwill not update correctly.</p>\\n<p>This is because we pass an array index as the key to update the points array.\\nThe index from the favourites list is the row number of the list which does not\\nalways match the index of the points on the map so the reducer can't find the\\ncorrect point.</p>\\n<p>This demonstrates that using an array index is not the best approach for\\nmanaging our data. It is preferable for each data item you are working with to\\nhave a unique ID that you can use to identify it with from any point of your\\napplication.</p>\\n<p>In the next step we will update our data to use unique IDs instead of relying on\\nthe array index which will fix this bug.</p>\",\"frontmatter\":{\"title\":\"Removing Favourites from the List\",\"step\":15}},\"allMarkdownRemark\":{\"edges\":[{\"node\":{\"fields\":{\"slug\":\"/tutorial/getting-started/\"},\"frontmatter\":{\"title\":\"Getting Started\",\"step\":null}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/links/\"},\"frontmatter\":{\"title\":\"Links\",\"step\":null}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/1-setup-package/\"},\"frontmatter\":{\"title\":\"Generate the package.json\",\"step\":1}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/11-favourite-places/\"},\"frontmatter\":{\"title\":\"Favourite Places\",\"step\":11}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/10-pointer-details/\"},\"frontmatter\":{\"title\":\"Showing the Details of each Point\",\"step\":10}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/12-favourites-list/\"},\"frontmatter\":{\"title\":\"Favourites List\",\"step\":12}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/13-adding-redux/\"},\"frontmatter\":{\"title\":\"Starting with Redux\",\"step\":13}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/15-removing-favourites-from-the-list/\"},\"frontmatter\":{\"title\":\"Removing Favourites from the List\",\"step\":15}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/14-managing-favourites-with-redux/\"},\"frontmatter\":{\"title\":\"Managing Favourites with Redux\",\"step\":14}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/17-testing-with-jest/\"},\"frontmatter\":{\"title\":\"Testing with Jest\",\"step\":17}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/16-ids-for-points/\"},\"frontmatter\":{\"title\":\"Adding IDs to the Points Data\",\"step\":16}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/18-testing-redux-actions/\"},\"frontmatter\":{\"title\":\"Testing Redux Actions\",\"step\":18}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/20-jest-component-configuration/\"},\"frontmatter\":{\"title\":\"Preparing Component testing with Jest\",\"step\":20}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/19-testing-redux-reducers/\"},\"frontmatter\":{\"title\":\"Testing Redux Reducers\",\"step\":19}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/2-webpack/\"},\"frontmatter\":{\"title\":\"Setting up Webpack\",\"step\":2}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/21-testing-the-map/\"},\"frontmatter\":{\"title\":\"Testing the Map\",\"step\":21}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/23-test-the-app-component/\"},\"frontmatter\":{\"title\":\"Testing the App Component\",\"step\":23}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/24-test-favourites-list/\"},\"frontmatter\":{\"title\":\"Testing the Favourites List\",\"step\":24}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/22-testing-connected-components/\"},\"frontmatter\":{\"title\":\"Testing Connected Components\",\"step\":22}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/3-babel/\"},\"frontmatter\":{\"title\":\"Setting up Babel\",\"step\":3}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/25-test-the-pointer/\"},\"frontmatter\":{\"title\":\"Testing the Pointer\",\"step\":25}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/4-eslint-and-prettier/\"},\"frontmatter\":{\"title\":\"ESLint and Prettier\",\"step\":4}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/5-starting-react/\"},\"frontmatter\":{\"title\":\"Starting with React\",\"step\":5}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/9-adding-points-to-the-map/\"},\"frontmatter\":{\"title\":\"Adding Points to the Map\",\"step\":9}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/6-adding-the-map/\"},\"frontmatter\":{\"title\":\"Adding the Map\",\"step\":6}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/8-webpack-dev-server/\"},\"frontmatter\":{\"title\":\"Webpack Dev Server\",\"step\":8}}},{\"node\":{\"fields\":{\"slug\":\"/tutorial/steps/7-styling-with-postcss/\"},\"frontmatter\":{\"title\":\"CSS Modules and PostCSS\",\"step\":7}}}]}},\"pathContext\":{\"slug\":\"/tutorial/steps/15-removing-favourites-from-the-list/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/tutorial-steps-15-removing-favourites-from-the-list.json\n// module id = 329\n// module chunks = 181225226889932"],"sourceRoot":""}